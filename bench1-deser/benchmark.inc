// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

int M13_Create_F1(M13* message, M13* other_message, std::string* serialized) {
  return 0;
}

int M13_Deserialize_F1(M13* message, M13* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M13, other_message, serialized);
  return 0;
}

int M13_Destroy_F1(M13* message, M13* other_message, std::string* serialized) {
  return 0;
}

int M13_Get_F1(M13* message, M13* other_message, std::string* serialized) {
  return 0;
}

int M13_Serialize_F1(M13* message, M13* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M13, message);
  return 0;
}

int M13_Set_F1(M13* message, M13* other_message, std::string* serialized) {
  message->set_f5("");
  M13::M14* v2 = message->mutable_f2();
  v2->set_f1(0x34b5U);
  message->set_f4("MvSelqVgFhrxPvIScdCPhjksiwaiUOuetckhbmBnFEjXwmEjuagWcisFjBsBsyyJPjIRSpqQlhBQdKEkLzyuZKqZqHgHjaOVXXCoPMoIZHyyZMtIOesxxdcIMCQpqoPldoTxkJXWNTjdypztrKKjYkntUMqeaivzXnraQVFKSesvAMxqrSkPJMDnKwpbtDsDTzlAJjBVtwtWpZjfkbvEnwstvkjNsqCxhrKqcjSAAgmEFFjBxqlaBmFStKNowkhPvbkfHPsPzUGAJWiHfLMNVYYAmCkSdQtTycTQCfLSrbnTrRObjLDRyRsUquXDlqdeyIkcBvtThQBRBSUrWuSOczTYoofmoEzVzxSvipySagcjkkrVSMmHJySppdGFJywdEWKvgtxjHRwaIrgsaaUDrWSqhAfpWQcYPgfrtDrmdNvnYccwxjQOKPvLzZNyoORoVpwiGRgVJxLrOBCcABTByfNqVPmTmAMWEWxlLsolAjWHPVhNsDkkyLqxsBfOCjTJFLfvhSxOyxlJqCsaBWYaTufbxwoZoAbEbUKeEiCrYxjtZbHEXSqMJACJuMpnKZZsaHElSLTuzbDYvSndVjjgcEKuZNWtbfIvkAqBgepixvWYQkDEWXpIySNyBJujNjSgeeJqfCIRQOaZnLlAMbOHjxNTjQzMLruJOHrmjeNYkuXnlawnNuyGoxIDSgOYdGknShQMsascOMiDlAsbWDRHkXatRcCdAxCzbWLzHUpnTwOXQSgCEPgwxMHbvOiEFTECLfJukpyEpKqeQeebysKgutvKqlpnsinrXoUaCgjmEtvdNRWbUOZiENbeYvgKHRNpstbVlpcafgeHbkJRdbEVDphAKWTXXTAfIRITUTwaDPsBTKVKvWXgUbcwSxmdxsbECqlgPMOhtCWJSAvThoIcHTxiBVlmlvRBYKno");
  message->set_f3(0x1d1bf6U);
  message->set_f6("MChGQBtXlMaruATrsnrkUf");
  message->set_f9(0xb7ba95bcU);
  message->set_f7(true);
  message->set_f1(0.489);
  message->set_f8(696);
  return 0;
}

int M15_Create_F1(M15* message, M15* other_message, std::string* serialized) {
  return 0;
}

int M15_Deserialize_F1(M15* message, M15* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M15, other_message, serialized);
  return 0;
}

int M15_Destroy_F1(M15* message, M15* other_message, std::string* serialized) {
  return 0;
}

int M15_Get_F1(M15* message, M15* other_message, std::string* serialized) {
  return 0;
}

int M15_Serialize_F1(M15* message, M15* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M15, message);
  return 0;
}

int M15_Set_F1(M15* message, M15* other_message, std::string* serialized) {
  M15::M16* v2 = message->mutable_f2();
  v2->set_f1(0x3f0fU);
  message->set_f4(0x1865U);
  message->set_f3(0x38dbU);
  message->set_f1(0x1917U);
  message->set_f5(0x2913U);
  return 0;
}

int M17_Create_F1(M17* message, M17* other_message, std::string* serialized) {
  return 0;
}

int M17_Deserialize_F1(M17* message, M17* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M17, other_message, serialized);
  return 0;
}

int M17_Destroy_F1(M17* message, M17* other_message, std::string* serialized) {
  return 0;
}

int M17_Get_F1(M17* message, M17* other_message, std::string* serialized) {
  return 0;
}

int M17_Serialize_F1(M17* message, M17* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M17, message);
  return 0;
}

int M17_Set_F1(M17* message, M17* other_message, std::string* serialized) {
  message->set_f7("OKVEZlalxeFWBdlzLyqNlmSdePgObqjVdfyRZmoswdGzbKDzjReUfCAxenlukfxsbZxoOvKYVCkncCIAvjLzWgtmdIKKqkDxWeQDPPYprlcKGhFWTcnxkdzDXkvGhUJmJfWJmJVmhFarhZgAjsxsIPGEfVvQwfRHOMFVkAjvpQFNqrhBrMuWAmWjNtwZOXmOjWwbWGizKryLjkPbKqKGPzEAulidMUAQtwTnxphfqndGeUGMZCZoGQkSXodsYrevUEpTRtzfsNtVnFkTSBQFBxFWikGzuNUcIttCIVGuUnrWMWuSAnNaVinhRyIdYlFcOeTSXXAvAiXWlIUOkeAzMqkGlQOXdUatHWXqufAZfXsJilPucYRVlFDyJFLbsSxVAZrDlgIrQOQzjRVZjRhKrgXhvaQWlHjUjNuuIPbrpIbtZZqSiZqqApXVioKLLIsyLgJmxwpXkVLMWRkFYMaBAkFcEgroQnvLxpVVGKSHiTXLBSnuDnYufzhYhSQAqIYYqjnTCfYWwYAahKrtsIoQAdRkekEFRRelREMxYkIBtZycqxYauzgLIRYykaHRWnGlSeqXYcBROmuBwHbPTFQtDuqkWMPbjENKirVElToezPbunxLbzdTfEvUPoyOYPsEUGFmqNGOoSgETopAFZnMJEcgBTvWdorSUNHZpYDqLgpOwBLGllVHbDmFmMDSmGoWq");
  message->set_f2(0.471);
  M17::M18* v6 = message->mutable_f8();
  v6->set_f3(0x19bdU);
  v6->set_f4(0x3dd2U);
  v6->set_f5(M17::M18::E1_CONST_5);
  v6->set_f1(0x4b1U);
  v6->set_f2(596);
  message->add_f4("bMfSsngCAWz");
  message->add_f4("sQPfuqOTKRka");
  message->add_f4("uTBsJkzhmPCT");
  message->add_f4("vepEUemizhXwlfdA");
  message->add_f4("arruZMWbKAjnrvAgMdkUXpAkWthNpLbtdnkDgieXJgLlGDZOTWyZBpxxEcCGMGAIOHtGEFehjhBxpNnctBZvxuKdySvTEanzbTYzzeejHlLNCTrHsSbmFPQesZrjKPLMiBqLbadvGCwqmVjlPtmQxivSuOBpUZGHcNBXhSyqcoIasCIZweaxeAjtZvlcbSjztJeIAcpZeiCVIinyMjwycWRwZLrdHKKpjVuuzZRkErCBhhuFhRSLjyLqgmvPRJdXFPWZWPVshuUHVNeEinVBXeNRykIoZAsYxiwdNBOGfZXNfHibevfmnTrVbqRgnqAzSkblajONGMbjcrTrLICAdjEQyIHnwqBtQmkFPEQZBvAsPtiKRWbNXhmRwpsirPPuvimEhVnLYXkIpOpmFvmldcSuJCzjdaVOMIRDwVQjYnGquRbZFfvKsqKHCTsrrtNKwNzMzJSuyEdXpJohIprpIaNIOuiqEGmxneFreOQZILaxudXBeNTGqPMAhTfjvnxIizRznIFsTarKxjFYohDbodSeBUhIaNxbQqQwaIzlOLiGTnkfmCkLPDKPHpHUgdsxUoVdgdyXpNLjoWnGlWfftAfYUKCFiCBfVbsnofyTuvSeBBlLZGhBXGcKcMvWdPTnsGmaClzDRLZyxSRHAzLhseZYjoiXFZjZOQVpXusiLXpzZtxyKAdZTzdNGFRzHOHhGewIBkjnUCvBOJqaHQbFruoSUTCRRhCnxZCjsFtipfXWvyYKJXkuymBSOeSHSxqkOxJwTyOfDAaDirJVUgWORwBfcToDGMsLikNLqEuyDGGYtDLvckQhHhKdGumOCYntbjbkgpbpxZHYHwheggbvdIigEdeCvnxNtZRjlzCcRzVyAhMcfVQjefIkuKtBpOTLPWjFPlOBtmvMEOGaLTAWxRfxSEgbylEErmhEMtTqhQCNtUomfMdJJleqZiOOUpVKfYIDtZQZLNvqzerOmuJTaizPzLPVknvsaEHVJsAhPRwHXdLuXKvMQwvvLbtbujorSIvuMvmJGZqmcerDAzKswVuTysYYmsvlLnnKLTJaykokmeMxulULmYhBWBtDIsxMSXCVITYlxxyNZfRJnnssVYCmpjgIWoHdGrRDVZfUoqtYpCnkGYNWKHQJfAlpGciLkgIUVLsjLVkxYHpuGntuKeJtzXzWSENImzDjUdpbZMBhQTCIexOyouTGCsgTzCakVWVgzcYAbkhQtqezsnXXWvlqVggUhgHeeQrbNdNiWFXEaAGyDdMecvXzODvhiNVMxmAocsEKLbhiNisCWjjcTOlYNsdpULTYMUqgdGVEkyMxfqFlGAqgtVNRiuXwNibmlYydDDTDIdcqzBLxnJhscwhZINRAWkPoFPkYtxibdrNsygsVqGkfhNafXrgYJxFzymJUQpvxUDagHmQhueQfgMZBFRRSQLoAfJZszFUVUGtTwJwtVoTpsUjabolMnkrdczaCiAZgfIairdIDJtokQZalNMueeGQXssnziLOfWMQWKAJNqIaWBsUzlzDhTbbIJKLoQqImGkJjKkbeOfhNZXkKFTvzovvZhxFhpBAEgRGyQ");
  message->set_f5("EQkHkHISOZ");
  message->set_f3(M17::E1_CONST_4);
  message->set_f6(true);
  message->set_f1(0x6ee4f24e6U);
  return 0;
}

int M19_Create_F1(M19* message, M19* other_message, std::string* serialized) {
  return 0;
}

int M19_Deserialize_F1(M19* message, M19* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M19, other_message, serialized);
  return 0;
}

int M19_Destroy_F1(M19* message, M19* other_message, std::string* serialized) {
  return 0;
}

int M19_Get_F1(M19* message, M19* other_message, std::string* serialized) {
  return 0;
}

int M19_Serialize_F1(M19* message, M19* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M19, message);
  return 0;
}

int M19_Set_F1(M19* message, M19* other_message, std::string* serialized) {
  message->set_f12(0.108);
  message->set_f2(false);
  message->set_f3("lcPXTQVWqGmT");
  message->set_f11(0.788);
  message->set_f13("RPLBUpObIuBjUtVsCMmAREmjQzuumPcYNQARXxgxSFNvuHxOuzNrTsAqYlvPkzFAvuAftGJTLhxsrNtvOCzsUsqhlNhGgrGAOdZhGFXAagQNHtdfBROSllsnlXxOggMajgmklqWdjUiqwuMsApEjBaSTAxBKtaSZpzHYnNRgGRqFYmRjthcDqKYoNKDUJtdbqqAfGsBUPvmGqhZqyVJMYerrcBRaDQHePtrkyKLTWuALBYKkcRMykfrFLcUvaTDjsRUzHjEweAqwRhrWDzUltrAwzpTFHlkqdTZjIrmKVThdaQPBRFlWxjVZUkvmwetuGuzGKzCZoklYIqbXDUlCNEOeIXiATBRmOidRjNIEoxHbVUVCvjaMQhHvUgezbRjIpZlqQHtyIrcXBZuBTHxiUYaCUHbrqrLlIdADQnsBqobhgyLNAUuVLvyxkPIkzskDPPimsWujZCMnKhLZAEneXdoBPNpfaWDFWaGfSCTRMHHwRyeAKJshtVXpKDFHHWVEXdFgiaFJfSMXllMlYSmxQkDLBMkaAaTsAeGFjNFUtyVcLbGMEPSyrLRNnPNIkpZaXzAsEEEVYSGZvaEYFqhAQaBqCjnFbIkWHPquZgjOszqYGZosBoXsdvZUPAxJybwxIGXLemSJfPdZyPLnHalFYPYTpXRflDILVbhywGybmYwEehmXuNYeTPvbBmLLxNQAXSvGLtkjOLeszXRtZOmPLOvuHwYewalQnMaIGKlenBlhLjIDQYJIwcQZEwvvmIKqmXSpxqLoOCpkmrfCTaeRLmYJBvCQlmobceWfNfeFDaxqOhEBDjFukaEfpDfpykNGPLI");
  M19::M20* v2 = message->mutable_f6();
  v2->set_f1("EZkbyxYTck");
  message->set_f1(0x3dd5U);
  message->set_f7(0xedaU);
  message->set_f9(259);
  message->set_f4(false);
  message->set_f8(0xffffffffffffffffU);
  message->set_f5(0x1f4aU);
  message->set_f14(0x39e9U);
  M19::M21* v6 = message->mutable_f10();
  v6->set_f2(777);
  v6->set_f3("yBDyPoXpHqPLbhPxKM");
  M19::M21::M22* v15 = v6->mutable_f1();
  v15->set_f6(false);
  v15->set_f4(0x2d0aU);
  v15->set_f3(688);
  v15->set_f5(0x654131dU);
  v15->set_f7("eLLffCaPsAeE");
  v15->set_f1("kWaQhnvUweLfWASF");
  v15->set_f2(0x3ffbU);
  v15->set_f8(180);
  return 0;
}

int M1_Create_F1(M1* message, M1* other_message, std::string* serialized) {
  return 0;
}

int M1_Deserialize_F1(M1* message, M1* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M1, other_message, serialized);
  return 0;
}

int M1_Destroy_F1(M1* message, M1* other_message, std::string* serialized) {
  return 0;
}

int M1_Get_F1(M1* message, M1* other_message, std::string* serialized) {
  return 0;
}

int M1_Serialize_F1(M1* message, M1* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M1, message);
  return 0;
}

int M1_Set_F1(M1* message, M1* other_message, std::string* serialized) {
  message->set_f1("hdLKsEdfWvKuDkciMRJvLGXlJOFWCqcQJqYLuiUkNBorKvvBEJKAXcDPCyWFZVlWgpBZdWICkHfIkcbBQZVGvlPGcVwQdALzSOqhYjrUDFhAhJrZcJDwyvGiGdmIaUjMXLlZZhIDzcRlvfgyscncwFAxqzezdHZlbBiKVwkejHRFcpDYFBphOGAuZuYxMuExtEORIxlvMRFePLZofylcqQeBRtsXqIiWfqZCGdRLFWlwiwhOjKIdIWDdwEpTRgBDyfFYcESQoGFaxYbVlcjzWplzGZHqFODepqbCNlAfyxLRzmuGPNPrysOgOPvTXpIFSYcHPjrndvjcFyKKCRCVXNUanHkYqzMxczKHhiysMStnopAkvbOqObHoUVgsnTMMOucytWuQvWPhbNPaDYaTsouBLSywxdeOmHGQqFRqbLhhtYqFkwQwXNauvnDNwulUWiYhBYqNJeatjheXEyPOHVNZtEeMBqDVknQdXmOMWrmZSXcskhmwMhYDyxunuoVLRGWRLwAkJfeXUHGanGweaHYTEEYAbUhxjFvTGVDXlyUTikHgypzFDHvHTZmpEpySDtycVBCelHsRSYGokrCKogYOiilbZeDWaqDxhXtnnwQmrMerbtiengltpRYrxVPOsnifYyjtJzQQbXeVkxyAovKOVYiRDZbPHILSjcShjDJvtiBUqPvqrTnNgZLxGltPPQChsPBQJvauRnQXTVcmvtDmryLDidfpBtrWhKuulbvgSshXJoAmnEsSCRFtuoGqTaARJQmzDVpwBQhIPeEbxpddgNXNoVbnUGHmQAlkTsUseNmPajZaHQOWLepstmLjXRsbvmqYTgrXWNnBdzqChhTaFHdJvBbHSpCjGBvpnztFAwNSFXSopHenYYirqEQUxDVnGnETOWJxdmkrTPkVwedtqeNTBoKMGEdLgohBclqYknmyNBHbVELDYmZolxgsyPhdGTDCCzPnwPpuiwffjNNpknWKbLpcYKMkCXXZYIvpCJENSqeFNLYLyCgfOGmUYahpqtdLKPLjRNARvYAuJDJelgWzNbohvkrLPZEzWoGZpQIMrWiaQJbXcTzYuhxlnnrRaejRLfDowyqQZOmHxiouhFigNJGtmHSKDfgebnSSHnDcuNTdYIasuhpKywfBSceykinxTksxKwtjpVOlJUGiCgNTNEIAlBuCaAgvvUkKVqVPVtpVjYElTFcrGgPyTlhRoaymQHcAEYVhIjkeJTKxknytodGHvBzBdsVvMRzeIPOmETwhxSsNVIR");
  message->set_f8(0x1d60U);
  message->set_f11(0x5adc17f87U);
  message->set_f7(0x13b4U);
  message->set_f6(0x2c96U);
  M1::M2* v4 = message->mutable_f2();
  v4->set_f1("Lh");
  v4->set_f2("NbmleLRVCAokD");
  v4->set_f3("hmZcTZrZfsZImpkC");
  message->set_f10(false);
  message->set_f3("aaUxEWnNcaClSAMRQpfKWfzHfkOhKJayzihfwhjxKHdNHpFRatvbtFODvaNtIBUWxLNYCEtPhkOKkNvioYuhlzJVZKAjWQtfyhLFsPJfCrWuajwEipVxQdQYASEYMiApImIXXvnAaknEBHMBgcJhfVjBkcPXXlMzwUcEZDhvImgltTZQqDcXgFPTRUPvLpsHzzFQVAWHuiHJEFcpVOXuxXCfODnaWktLBXeGGhvhaQsacCXlFZazRVwdtsZOzSebmDaPTbVeMIRAwlQtzxNceTpQFXqZenvRIwgZMyUXAgDBdyijdKOrmOwnfKSBXfYLppnVtfFVpBuaeeRmaQprEMkiYmvvuQJcxsolHhIBHqirmsnYuoaQxixxAJRMKcXiaSgoFLWaZwMxMbSRSEHPkvhjPsRTXUrcvffGeYyylWfjWHYleesiZMlcRnPybiXULsrAVOoEBOavYIkrbXBWZCtpRsBvcExcxJglXvKENYlSrIQXKUbsNOUYgZvENIfappRtskRDPrvahFpJQOHbmRQHzUqHgrkhqNRscyUjzkZkIdqNmLeaFWcGhnxAyKlEDPwLvOHTHLxRGNGKrkFQeyILlxcZZaWyudvYDTzSjxYqnFRoojTdmKHTGdUIbshKkVkgdlUdaDzqccoMjqVzknVTtIkdRjxzGosHDWnkhhBHsTZIqWIWSeMLiXaZWyOzBVhTWzmWKGBYviZhQmbIiHDwmQjLRKHorGcDROinzuwStrbACbAkBpHofHAfoxpZsQJcoiLBiTSlRCtRJoNbefGeNugzPBpBhBiSfUxvEfvdquqFGASoroKBlLVisezmWBzcVZkJtbbgHggZIewRIoxpDjjGPJTtqQwuDllykzPhBovdqldzgIqmNxhTvWmkpHYcCuCEIOPsmoCYwYeQsgNgZIzsIkFZXsChxYUYGAGVXlZPcyEXmSiTNdLZriRbsLqxJgSrYGnjyCRfTBAwmDXOXxuWYLvATlXrAHDqatEejUCYehdLgLadXdqiLrwAymSpAlRsCecqKMBEFcetONberpoBNhdQcHvotAYoslraAxtaInPOSyZeCrAOGujFedYwRvsqIQQdLRCyVfkytPVkWUjQwsrIIOIZGsJsnqNqjBMhPwOHDBREFYBifUPfGDdCKbRIvqQCSruPnmmhVakcICZkhiESrCvvDJGfAPueeBYsygTBCsVxPaUXDexsyGfkknTsePSTkoUxaXLgKPebwDuvEqdTaYfPeWFFifitQDFKXdwfZlZPLwZUIgzNSwweSnhnKHrOAmiiDGmkByKzIpOSkATnXqbrlcOSoPvZxkZbRkhxbQxwSAhERVUzmrMMyBqdLRiyEdMcnbfrpXGRlKDzSWRkrsFHqrRGeBpmJLPjlcfKfxDkhTNhBbzLTXMbrBfVODGwJwegPuzJkWpcAKhvRVUdItDQGubIiWgIIlblpNqMKjsTeqLSIFzZsKmqhxkPmRDTtTIwNjzSWMNcEeVuDURUfGtSHMVcVUzNjsnRfCnvLaaLuCIItINTLBumTUvTTDWltrXGCfROOckrzcAkupptxLCsCjZTSLQXeVQzqJcYJNFsPTwrQtEbObmcHXEaxoyUEyjArUOCSBWYBsGfhbUXxgCmdYrDRMXUIATsbZGlWpaYElcsEHautPHnESaISVNleQGDagCwFeGoeDAkBohNUnhkZKXfpxCWnaeXzbAVTTAhWLbCCMAfQncdJITuMprmTETXAZXBDymnddZrgyYrjvBCupazwZZBrqZQwaKfcmPYWKaTibhFspzeUmggpNzntaGnltLmaEgyhkXOUOvIXArHCOxaZdxHcWDqfqpCRGquVNMErshSmMbCOUOeDiLFFJFbxpvBOgNbUACfqiAFquJGRTZGQTxeDqypfKsJiGPKDTwTDhwyubAGojZKhAhSrjFYyzJZXdnojlPpZqKgzrWoXEPMPaYYEcHrhhJSHSanYySmVseaGEyUCODIpHeWqmXFCbwNfKpnxquBeaEuwfGMVdtvCiwOAEsIpnIhkquPAxqdgYpPiIFVlddywiIfwueLJNrUkaXSOaCjTNJNmAZhpmTJPMbSmpCfIQTvNOUiyWsZiniRAnNnZAJXkzRaPHIzNtXjUgzsIHiWGgCgYOPeuQChnGmsxwyZKlqXESVKmoNqCBBxqVQmlQweOOcJHBXeivqLnzRrjNaNGeNQBfDIqpjeqsvInVlPMKprAkUyZssZktjwETxYHoAgkKFNsNOnBDzBUpFQyEGQcqrUsYtDoFXCQHkwenktQwwNaMahbAZtCyZZpvPCFKdMYprLNPZrUXVpClGcDBqrcjZbTgksmGJeRwAHdBtaTyxIbifVkzkyXKunXizzOONNVJYftqPASdgEciVOFUwIwZMAWVgCiyoFrqzGYGrCQWbFwRCRefpBhghqGzjyfERqPRzOnOoeTVTYzVQgRLiXiJnUFegGEmbXAgnumQidWmqgHjDVeMwgaOkgSUmmEzlwUghaQMYHTBmaCPuSspJObYOXXqgNAWHwpiwFAaxsmIrruGxTYlGwyBGujltzoJzkhfHwggxdmRZsgeUEPyZHgrSNNtCLytGyDzqsqUxAddTueSyLtSSTwrcnvUKVZQevXGIZYDwDjllgAdrBkCNlYDFOiJNFmtJSfHqLBHkOaHhgWkJwrfkzysPWMfeUIuZahyvwzeNzwjANhXfZlfMeRQrDhiwrFBUSYLIgkJyYjxtMslbggjYCkkTDRtTyZiFeJHzXNXgHnXexQncnGxjzbYFnoncJwfDgILBhmrRwVybKVMABMtEbqWLhKeEpFHobKXculhQpCHkCOMbjOXXklWRKXbglRLgaYTTgoHIwfBnfhwoVSWyDpMVSbWRPHxtXSPDJnxWFbruVBTZnVSwFWVZZzoNgPWshyrDWJPCCrPnZchQswMQCvhcIppjoRcknZKSDZAjCnSQsHRSnLJPQfEwOTxvVBepOXmUfjDMXWIBQJcMJLeVHhtQNpshOftBYjOtWidOxIYjIpIxtoNVPXXhNupGACpuVhKCJcSWnNxUpLLnRajwSBobSRntIEQdsrGZNKAYPJeAGkHKhrKJPowrfgumGyIpuVlxIxUETyBOOgIkLyCqDXQFjFcUvljuroTUBHCJSLYJOENAbHjuAEGbysrSPoknlyivORMsnvdGmSKKofQRgUamaYRNihxTkfTyIqxJRDfEjqrRRhYwAHeWeVSaoZIhnRvMejIhiCoJcrTUaJirrMbCvPjmeLvjCYkvuNHqvpCEMAWLdWmJhHBqlPBMYokAHxVEnWHVbElDWULgIRQHeXwIGmvphEYmHnhlNqQWRBizycDOmeWJMlJJXWZinlDxcDpZxDDOqQErvkNqsxhNBeHnkmdiCsrFiKKvoMgudphFpPDFFwxBrLNktfjOFJhjIyacbwMzHWgSsuKEzHSXLsgzRdwvYPFiNtAfvAqHqAZkmxOOPaEruRAxmrwgNmmIJOvYzlTYdQohysjtJQwNdoemhgbkTPhsLbPpgGwAZzmPAeXZELcwjeklnGvNcKmKGfDgHbHKLcCfCFpApbwEqlQdjmOIcyItqiSavhHeHIKshxGSimPBjHAskrZjjDJTOqGUGKToUXGxDhkKGbweoxOpkmOuFIlnLnKRJOkhyoVVFaHHpbbzheQvjPOiTxzIMUysBNPHIMdXunRebZqmOHnpKeBxVUCFGghQFjCMkEBiUNpMblqAZPigzyuydboYHVbBaXoPNvrvodfESBoZWWrHMdCZRDViKJFSKFJldYVcpsujbEaxwDqfGzbLBLYoCdEvsyIpkBOuHLSxukVRnqjOlYrWufZJztvoxAEoEWTkMciMeAuDaZgPnRgbKHHmmhyLWmBiOuwZlnnLQdoaUhCenzCatCVxQXhoLAYMSWBgdHDyrfNYrOOPlmcvgcgTXOFayULutePIuENspboCVWfJQDFkVpnwdTmRtWrGTuZCBhkOaYRsEiLspsiRUyDoecfkscfovCHKNeXFBTfhWDIJUqPQEbGgVIsLQtuvHbzKDjcoFgetbctSTjPRDAKlnltXXOsnQRqBKWBlvEDuGErAVKYFDeOQcdMrXwdFDcgJydqyWsRhOaLYnqOjnKSDQkekdkbolgoEOfIJnGgaXcIafPVMQUHraORNNJOkiArqdBtJqevKSTynFTBOPTXaXFekTYFSkaXiioiLSnXQREeNfProZDSsAjrbMMEKKfGUBMKkNYoJojzVMlRlnIOHrfrvzXqkwfmiymESuSCXPqrUsXJzTnpLhkEJJaszaIdIXNHXmBNczjvnogQuYxHQCPHjxYMfwgJxxFucmOJhFOplhkTUUcaIvMwLZStoMREbqiGTmwLXwoWextHQuYHAzkFwedasXfVXbNBtADcfLxPJPMYKyLrXXLFDgWzqhJpZnBwObCtwTNbWkpgMLnwmPIJdxLAoWOAhedCfKGWtcHvdYFDIrAQtfXkbLRICBtkREBMZHJXwrOBsARsueymbUjahdcJXHMFfXhcuomdZnjwxpZXxHPWNgZdmOKzyYHBalPfiWnrizzajwVLNtNcpqDPibSITcuibVIGxgjUieFkAwgdwcXIGLdjEgwJcfYEcDozPoZBFSlLxdxrKwGAizUaguODIaseVKlfTirwIjFWNydAhCtguPfNoOUCbmoyOIAbDcNPVJpruKJPMTrOHBJKSUdcNtFllFqDDsiDTzusFewFILtadfKPsAwFUugQdauPszADwLZmpDMbrqtgKPdRIdUsEdzkSlzuEXTLYEhvsclkpJcQWLGdVxpSrHDmuiziYNLZSUUNbwCKkkSHUMedvNuRSjJQDBGqhQwCKZagiuknHqYfFLpdKDwNrACdvtOwNBEclaGvAfSDgYCMULcIHEnZpMWSveKHsqwWKeFysSfbKSlRhlKYuNVWxRFgwdtmasWPPEArzZzNkZXasNWRzPOeNpEIotsXWUblnSyjVLXEvqQBaWogrLcHDosVaHxlARdjhaujtCrkUAXNiRlzvOEVfDJzIGTBqtSiBzhWrouSgKrYmCTvmdyrFklrXWardWWwxktxIGwimDrWPuKZnyfjRNZTEHmHtJaAwlLmuCZdYSsrvmAwKCMzYjKAanBeJRkIadLEoksqjdqncrraAyTgQFgTAiLfWvzMWEbhNeJOmSpPVYNksDmKSxUVIxwdCunjgnxhVQsqhiTQkFnMkXlaGDFuMurrMdKLTBEhvEZyxgZCoJxOdHRzPIAWeiEpBwjcTdNBMyakMTXzxRQhkSeAtyukQAAbZFSXNJCXsfNnErlqHQpTcNihYhWtzPVFETAyVZoFDLfosgbJcBUtpfwSugfnhjPipzhMyuRDCElMKiKvrSPZJZPDlDSbTdboMXSvwrPdYYkiIJYRVrdWFIHajykMjaDhzVCbcxrEgklKoNRFKUnTDufNcwoJFooOmyREJJlYFjhVQWdWatdGoTAFNuwUkFnYYPknxKNeiAtkscXxkxYSMlxKee");
  message->set_f9(0xa918195U);
  message->set_f5(0.335);
  message->set_f4(0.232);
  return 0;
}

int M23_Create_F1(M23* message, M23* other_message, std::string* serialized) {
  return 0;
}

int M23_Deserialize_F1(M23* message, M23* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M23, other_message, serialized);
  return 0;
}

int M23_Destroy_F1(M23* message, M23* other_message, std::string* serialized) {
  return 0;
}

int M23_Get_F1(M23* message, M23* other_message, std::string* serialized) {
  return 0;
}

int M23_Serialize_F1(M23* message, M23* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M23, message);
  return 0;
}

int M23_Set_F1(M23* message, M23* other_message, std::string* serialized) {
  message->set_f9(0.791);
  message->set_f7(0x50daeU);
  message->set_f6("VeAJhurcWYX");
  M23::M24* v6 = message->mutable_f1();
  v6->set_f5(0.464);
  v6->set_f1(0.328);
  v6->set_f2(0xffffffffffffffffU);
  v6->set_f3(0x1929f5U);
  v6->set_f4(0x14e8U);
  message->set_f10(0x3a49U);
  message->set_f5(0xd8f5eU);
  message->set_f4(false);
  message->set_f3("IwUgUCVdBB");
  message->set_f2(0.161);
  message->set_f8(0x2abfU);
  return 0;
}

int M25_Create_F1(M25* message, M25* other_message, std::string* serialized) {
  return 0;
}

int M25_Deserialize_F1(M25* message, M25* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M25, other_message, serialized);
  return 0;
}

int M25_Destroy_F1(M25* message, M25* other_message, std::string* serialized) {
  return 0;
}

int M25_Get_F1(M25* message, M25* other_message, std::string* serialized) {
  return 0;
}

int M25_Serialize_F1(M25* message, M25* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M25, message);
  return 0;
}

int M25_Set_F1(M25* message, M25* other_message, std::string* serialized) {
  message->set_f5(0x1f0eU);
  message->set_f1(0x1368U);
  message->set_f7("AEoWduAVtk");
  message->set_f11(false);
  message->set_f10(0.18);
  message->set_f9(771);
  message->set_f6(0x2050U);
  message->set_f3("SRSElnZzclZuVbNjHUdOFLFRVIxnggtqoXPmlqKsinuUOwkOnbwnmurldKOjCxZnigLTCKSYxCCdeXtcXCGMoPzpoEsJEUqqWlUJQkfwhLbmiPjzpyjbBmxpZsdlYJquqOJKouhbWtttScAPCszMcjQfrsVxSqtSaBrahUYOUxHCcXABpfInmxWpYWyiJzHWRDYNYCiCarrMmZcyZTziIvuPTyeGINDiFjzbmxHEAvqTAsPaapWaThYXNBzSsIUrXtPsLyLlkcNdMDgacSwjvmNFvHCwlHlyXRYNiIaOeZSKFBigcBYWCuRBYUHMbCXzVAgkUhkdiJbajdkpZHEpREzPGyRrBJPYQOafnuOqaMzPjpOowFQDmHKObfCQfUTMVZWhyrgWfnYwPNTCenIHAYlYgLSJRXGhUnZQmvNsSWSsCGhaxDPowUpLuMzWdPgKrwRaoXHHljFgrMThjSUqAfmNPCBoKdtaDWMdaCeECaUpRNtpjqHfILkkpDVehebQtRaleAZOPXeQLMQJifzZrSgwMzQmPchDJXAKTVuDwLUYEEtOycsyLZHsBiTfrMrKgBnSvIdxRgYvrxPunrjiHmmpgvnXDVMNAbDdGgzWtdykdnNtFRtLBtdBqRliwJvQKlmuudZOVNMRTCrPpjgvIeigpMmHZbVEwNYzVWHELeoLAuIxklZcJWnvkVTIzXgtuojkxDWwamtaGnVPOdZvohNKvnjyfcVLskGPppSoYUtYxnwWaykGxlwOUozpTsGFVyMgmPfgtPOeEQoOxUIxpuHpSqSVkawgVfNFGNosnSxMmOfimdTiaNdLHgrdYQQIdzNenAyoZiLTXaIDPkgeTchEkHcNzadRthegJDxuJrkJVVZlidcCorFnCiHXZoOHgukerpjYCBSmkLBKuiKMWZobHbEaMauhcUfYlPuexPZyeKTGwobiVtMfoNgEhprtYLelRtslJgAKXHVORVTAtQuKwtYToTfJlTWXKZQTdqgtJHAMUNQRDuvCUhBXbbbqdQiILnJGXQeKUdholsDlNMEQUlSwCeqefoJmIszwRwixsImYJNgiQWtEnryeCPVSfNjwOBQYZddhBZqPgCLkvrVSIPylbjgUxajRFTeZdhzDXRWzjuJELTYMAhINwDunfqSZqtNQnMwtNMejUlCAbUfRRVbygbQFNELRsXzoeJkoCfiKoiGIMwnrHOFBQdOPbdzHQwfRxVwUHMbUQAYBFdgYgySAVyMARSqojXtTUWYPmQdrBEQvYjhHtnwtXTPOJzYQveaeemIBoRQoATRcUhfdDFcAeYJuBvOAKXQSeBiCwnPCxfTYDJkHZDbbekPpaHLGcniffRpLbAigCDRhVlxyAHNGH");
  message->set_f2(0xb27U);
  message->set_f4(0x3969U);
  M25::M26* v3 = message->mutable_f12();
  v3->set_f1(0x25fdU);
  v3->set_f2(0.364);
  message->set_f8(0x12a0U);
  return 0;
}

int M3_Create_F1(M3* message, M3* other_message, std::string* serialized) {
  return 0;
}

int M3_Deserialize_F1(M3* message, M3* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M3, other_message, serialized);
  return 0;
}

int M3_Destroy_F1(M3* message, M3* other_message, std::string* serialized) {
  return 0;
}

int M3_Get_F1(M3* message, M3* other_message, std::string* serialized) {
  return 0;
}

int M3_Serialize_F1(M3* message, M3* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M3, message);
  return 0;
}

int M3_Set_F1(M3* message, M3* other_message, std::string* serialized) {
  message->set_f2(0x15ee81U);
  message->set_f6("hPzuXGvybTSCtFjhCsgGWzVLfIerFdYSvBzNTWcrousrSFZVCYumuhDOIVUwGajmARBCKc");
  message->set_f10(0.357);
  message->set_f1(0x115ac9U);
  message->set_f11("TFbtIWycHzBqkK");
  message->set_f7("FCiAhueheEJayOQxHWrrgZROhbmTpDoXELRadmREngAnuidsmOKFcErmOdlAqqkiNFcdlwkjAPfFTiQdWpIowQwxGOOgqLbhLmvrInMDXcWMvUmhsxjlLlATOueXpkmenoTbwsgbFOZZuELfjlQglmLdxEfQRCjvjImGnyAkJZnhETnihMVHHMjoFRkMItZeNlactmwpXwkAkzNrSjgHSJYbGnbvsQOSseEYfOpVXrFFTtdiBVlkAwddtgMyjBENGeLUcimQztKFlqIDGmNgFvMiOmERrjnpnuQSDCRAcQuELGczvbapUfsQKXbhfLUjXKlDZEAHpZWOFPzwIreyZEBpythalFcGHMxYDoOLwIAVEvEePXdHNunNbVImroIgrhsaerEljzmBDelwmgXpjoXvVIkBwWFRmLphzuvzCXthIRZC");
  message->set_f4(0.513);
  M3::M4* v3 = message->mutable_f9();
  v3->set_f1(0.091);
  v3->set_f2(0x1243U);
  message->set_f3("ukoiAwxZKVAvkRrTyfHrZk");
  message->set_f8(M3::E1_CONST_5);
  message->set_f5(0.337);
  return 0;
}

int M5_Create_F1(M5* message, M5* other_message, std::string* serialized) {
  return 0;
}

int M5_Deserialize_F1(M5* message, M5* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M5, other_message, serialized);
  return 0;
}

int M5_Destroy_F1(M5* message, M5* other_message, std::string* serialized) {
  return 0;
}

int M5_Get_F1(M5* message, M5* other_message, std::string* serialized) {
  return 0;
}

int M5_Serialize_F1(M5* message, M5* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M5, message);
  return 0;
}

int M5_Set_F1(M5* message, M5* other_message, std::string* serialized) {
  message->set_f11(false);
  M5::M7* v3 = message->mutable_f14();
  v3->set_f2("XsOCaKvcHpgDMWANuoWZIovXkHwSSuiqrMirzjYFVTFqDYqopBDgvRPkkQRVEzvdasMrjqNuBHKuiNagFXBLAkRtUFVxcvlwofeVSJuCcjKUGEcAKKrNregPQzBSPkbQqXOXujDeXaSBFGIhXIuLaotFnrnkFaChvUKcugqHEveyEEnfHoNZfKJEGHrRHViBNoLZydJhtSkPGRIOimIDHYkJgGIRHowgToGXGQSzLodClToXvSmlIpRCnvrfdAqDSaymEvdVWSAyVgENVxkSLlHIitRfkdSOfuDTkSFXEjGvpcMHMmkgVoOaRPImrRhhZsENHNMBLMszSAGingHrXUxFGKrZsRjKgicURrTwbbepbOznaWniBeTjpRSEvonxhRfrYsVnMTfkqPjPXtMcLNRILlzUHDfJKTXcZhLfRfsHSkNzoXijIcsNorVvOqDKWpOkwpZbelclVHxusXwrKPJisHiAQvQrIUdhpqaUInaqAGfUWBAMqxAEOsRnnecofZiGifZkViTonYMJsfxsViilWymgssKQqyIyntlmnVanVXFYFGmVupTGCNxbOJBQNnxPmfqNwNzBufkogPQKPQntKAlBVUkBpfCzfzhPCQbeCbDNKvQEbCATXIObDoCxQOepgGgiquSZIncpRVJdkSQLoVqZqeEVEyZzpLllfxoFSeSegmBbDJVkAtoAWZHNdBLjusJYItvIxUGlkUQxKGzDgbquVVkXAsDTJBZbbfAWJpufLYgwVSxtZRVPAiPDirSOIOFMSLBPdIgLqKyDPfOJIIVTygFBDiKWErrnWUrdAVEbVIEMbopvtnDhxkShhjabzORfwGaSqrNIovZRiJSpRONwPeFMpITnfwnZXqFdjVhMyMxripkyJKaBwGsrYTDqstjiiCfMobRBqqFYfykBffeKFINfjKbLxpAoQnJznIXdNtjFqsjHkBqpMSTUMsalHPiDuLXTvKjxmhpYjKErzEbWonuIBWQamYoCUYAQPSGrnZUfjTqVsqpNrOAPkNzmmeOuAbnybKWwrsTzMtlJIkDGPlHnPLXAYBZiUwDziPPKEyrrOopvCrkkhSBuLPaKnDxPCxrPOArYyirdUYEdilwbiTwrlNlyfVrtghpTjOMtKENobsvbqWxiCOKSfSVbucDRotwjXpsySeUZTXZoRWlpWRLnlgGqnsOFpGjdrUjsGsLrlDpsTnQSZphWOnElfnhvIPnlXnoAVkVKoLiDoKJVgnrStIFwXAXtYVgjYTBdzsJAegYhUyXAzyjTBKuFKYhNeutqEfCNYcljawjVVkdHzlWokfUeIdmqMtdOFwTmbVYayQfBMgKJsqAzxrafWGtbJDkIPxgrXwmAMBMmSrxrYSEtIeulUKppcytqOcGxnvjbkzQIPAMYJNpqfjoZVGrsHXAmsRWlGTxECIaKjPRdvUPlZLbhKpZEDinfQxciOTNyZwNnwjmrioOihhryCcFJUZCIEmehniTvTMvhGEysEhSmbuZJRSZOemNkMzZOQNZGaYlCPyBJBFlfImBumVjQHHnvIAAVMBinElfCHpZXAYvgtPpAYcQEbxGIORiOUrOHtOhWnpEwlaEUEpxIvyNibCcigkasaxQItbYckYakULIpKIZAsgCSgMIVwKeIqbEzpNRJdyinHpbtbSXdxbrBZuRtduOdngVzidEqjpFpquOMwKWczuIbnrSAkPwFagZoxtXOhdEZRenasUiiJgLEWLozBXdeSaxfnCUcDNINXGyAhZMBmxllSkivmBJKZYrkhsTJuOqtKGncZBRrlEXQtKaIZgGoPAIbsBYTqflfWeOMHNzftVyOcfsHTJhjjyxooDDewfUwpRpGlKVDZliGrnsteeucOJTKgRnoJxOJpRcmtkaHFasgxIKWRNosXvvPfqwrBafEnulmrHsPyahaRgdVepkytkXepcOkCcnlcHAsBqvOezEOSpgyYToizFHbunCVHoNZkRBaCgPGISDzEvUDQCjSSZFylQzguttjhgLwGdDXKlYrtzWIdRMoSiQUMAnYHubHnnAqgoBWgQDVvVSQhNRLUJMISoSppFwQihWmdZdUzfzPisXaLawmWRRUpVqpdZIABwaaHSedqFMWVKkIOhSetnXviPDizWpYkMXYRmBjjvmWiCUrUZfhetAqzdZNZxFmmPStnlJHITYVsArDSfIOVTRUwoZicRlSfNcaCfaTQQQFBrkcNDfyWssqtBJTTevIhlmobmpqfKUjRHqJJqjGlblpzwgueTfnxfvuNirXSCGHhgVBrKJLsNevxMKSdwrqBawtMulvPDKReXzXmuBGFilCElhVWZEfPKKZyGevpLyMiIEXxAmGZLPSiPvnKdkNNpHmcgpfGkKoCKQbSugiArXJPVRQpJbffSuoHBnCZLsfNIidgYyrZFTSlVALkoqJaOgQfLoJdfTPxrHpvziBctgoaYDudowuSsqkbdVPzakxHbQqqJHIuYbUtVXKItxjhmzApPolRmhMkatelwttbATOaNiTxBnCcWkLIiORJStFlvkmESaijbhuYrtIrJYRqjwotSdABIVODCjCFyWTAilQOOXNRcVAyazrmFnxeCIHusYzoAMeLNfjQgnVYuMcvfWHUrAeZhvPxNHHrtWBEHQFKKBkomtISMRovhXBNakRENlHtihQVxZnEoumVWDnThjRLGHSNmEIDVlLuoWbulGCZMMjxXUeeLgXTjArxtTKqocZEDpVQYfWnAJBgkLezxplanswHGGbOeHxImbfqhEspHXWqyGJnaITUjQjxyInNQshHAqOWJwltHewBNyvxpZSZkQMeZvQGftbCIpnyZstWoLnUehIXDELloVMbCTzGueCkeVDETvBoGOHSHAVIuIiHtldNNkYHOEJMjzwIiECFZioPHFGZEVINbDDlFBhclGbdmkwqVMABDHGwWdQGvdEhioaKpHpAXGCpdSCdXCsrFLOLIsczOkxdhIVapaNZPORwBFLSiRPEbkFFFEMvXjjUZxqzUrKCvDyWlJlpIqHeFbWBTgqpiMQwgEgLbmPFrSsJMnqWxStuijJyVnICWmMALMmpKfCLYgKsQoaQxHtcIkHzvUuLdhpRcmkPfazqgwRNNnCywwIUWlLIZDrOyxvlvAmoYCaamnIGhONRoSZZVKIgUasQiZLAvtzCGDKIBgNJxghUlgNIgOzmacMoqODMqUTzsfQBuRrRNVvpqgkRAeUgEMeNcXjxrzWQoIRFjOoawzhuFFstFcBdSRiXGapYEvCgnNhXQDiscDThfhUQdzfrYlMMIKiAsQpnJmVmuAslzqoKruFyCrFIgBlcmREOUrKnOJqBNBYHYUiXqcNmnUxOwATpYgljxQsJcUmfxAgiVtaHVRAYIUrLriajvKdZqbbWAYyeIcfXSYggXOQZyTwpZKTBYGDMySiTgWbhzyCOzHVobPQTkLSWkLEIfSjOyLpUusPCGimDFGBUnFyMWhZKPindzUmHNojJLoPAmSTbJIhiLebVMQRbAPonnrsWDKCIpExzkBDpNRzKIpmoUFwxlRjreOYyRfWFjudBjkWwwoBklnjbzQjOjxDshTGYgcbgPAFnKVaoWfLYGXyBXTzKfMKkGvNOjdefsolKrWekchsyhZphpeDDlBaxlEpJWrQIinEUJxXKhOUAeQdXarrnykJJoTrsglgfUTlKVvwAHOINgDHQxBbjAGfOJTXYyMpxIrcuCsmmyBjTbwZzdoXzMWtCDHKYAGilFTfYgWRpGyweDWbPBddwvRAZIQmmtVFPvhUBjkVybXezxQwNCxgFOqQNnkZpnpmYjLhVGAYXWNnPbmrAqkdPzCLJvZBUYUdmyYACIGfCyRwkFDldyEPAGscjzUkvQJgRpVQgAkeAmWhoXNYMduotIlLAljdZkpFXBCkmcMAdpLKnvRSOekAijnsgDniASrWJjJkdRVVwyLtzxEARAvmCYtMKIPeFdJmoQvnLHvCgsTAeROdLbvyLUwuRhYmNjBjDDyfbJoeAGglurjCxHPfAUApribZbCoThOxNpUFIpfcdYlzmOhzHMzLDsRZnEihBtQQfvYUEIBYTindjGEDUcqKEPcwSujCcfRveBPyduBhPSYeCvdIiNIAkGhrJfCIMRKjEuiVOiaIcGMefjGltJhzZljgpFyBuNdatpRkqbwGJIAzlZoURuslSpfBGxIdxWPYILEgWTOrQBWwwwjLaoNmbAYDuhZOdKbYOkDGLqUEOWtLuZWZijUdVAuYErYcezDRVfhcolSeKYCUDahSPKucBTyuIDHPJcDyKDEcvzMsKNzbrmSXjrtZuTwDMLjbFrLWwOyeebBhASYOpLTvNsSzMkgFnsRaVYkHbbkVpBotVaJdczFKIbVTDSSUmLGbxeRXoTrnVwUcfHttmdukPTretLjykpAkMoDkUwOuPymeXiFTPbjuZbKKymIBYVmnoSROIJEqTXSpqpNNMoHuUveDbdXefVBGleYDddsbojYvXyIEVabEnVskBgzSHkqaXKJgqvCgBpjvLRubdyPbyUDuOmdbEpMujhLXHajTnwVbnONHVRtdPDzYyMDCMHNJMEybiEJHFauAJxUwTOEbiHdOocoEDaxeMdnqLZYVkpRNspYjixfXYSBxCPnWVyGdXohtYPAEdlPcaMAMFUNSZAwGrlbAyJBNWpGxHUZyeerWdOHVJPCdlTNyrWGUwksMWfbmzDMGiYGKUzircgLuTcBxAbWNYnEAVNUgDPATNElimEnUaIqouFwWFchVdeKbvaBLFBIkLfMXLEaKhfsrJoUPtCWBrKYqdocndQsTmiydOHDWpoZwbwAIRzoghfNzAtwiMHRbRfbcSROUdXkYqYpusNqarPSxGtFYPCmvprejfLTzkENbKXYFExnIOPKRxTfcwmMGBRVWwOJnbYxozqHQCZymWZdgTSIkvhaooCPPbgJblMlrZUDuPBOAgOgzbryWhcQaPxJAykXZHSsFBhoWdMGOKKOcqyNtZkYYnsEzRHRoLDDrZccifPkdaOXBLkgmIGJCajbKBytQivWARqvkMgPGhtLzbevtEABPdEfwTAhpJfNvOgkbfZQlNTSrbEUktlGGFqekGDpntkKUpGVHNqftczeEymPKKzpoVkHCJmHtKzByOfzKlFwKvNyvkfEsDwffIyLTCdjvYdfWlszXiLTXoOIMDIygBcbRNWJkgQyXuvNYSwfEqDCmxMKnHvqOjmKoKCXaulCRRzMimGITdVZhnNgmSItkqsyRITISgIWYDtVvprDbaSYDlCxTurWibzbqbWltylBIdLtFUmQQYhWNptEerlzOrwevnmlTChkwcAUHAWZOEIPHLWCrtJifYMRXFlZxTMURIXcznVLzCMPVCdLFuWZfNbbCPViBEetUYAZEVtANARunPpTpeSJUEQZygpLcwhVeSgNNTnFrqvBiKlAIasVuBxdReOwjFIiayNVmPCHxyhwqdcWLehRAmNRYWzEfmktdxFRMZdrkCtZhvZBDTaZhzmLCnMWXaseRYrwbileyYnOzfalVHVFKtPClKUiohFOijBlCoYnfGMbfBIZxhSvtjTjoRuOmbVuFrsHLHvDDTrXtxdmZHyxlWsGtPgzKDUuupUYcujdvBnAbFzsjJwjvUbQgHULbHffSZAqnDSwnUAtTRxYHaHEQYikIreRsfnvGsrGhdjSIPSuZYRMKaAFfjObdMIMJtBFyllDAdWkFMJWOgkLpMfLBntRCVinWIimrWHCEQoVqijThnVCUZYYFfUktNzeanlDdqvchFxshciJhpvatmOXHjaGJqpvfpPnPmRiNXetTMPfXFVAndAhaKOSqDEOIUAPqmCdyUgXxjsGQonxrwdMluqigLJTkbiULnAnmZpgeWPhByiTsRcoaGjexUaafCSaKeIkPpZBWUWQPduSeOjFKbsjftOOKejVYsaisLaxJPZyHfOBjEBKrFcjGtXsASpechwrkPSnMLhpIvOmNxSvxDVJenWMthyUwKxBiPnGLwhzljdQpzjXSJRbDUgpzxMTsbwleAPsrajglCzYoAHlbOJDcLMAWJbVZrGyFdQhVpEmxfTULeVslBGJDqQeKlCUuFQdQRDLeyUgAWHptMNYsyLFAlolsoTzGCazniDgpoxfIgYtRMqszjwBKwqYQLSCIpuQzRwIMXhLKmxjzgrbWoAHkpkjsVuwgvWAafiVhCmkvYYMDsMjczPsWVdpNWiFkFKYEvRnkZXWDZOJTZaKhIvotGZowTOKRWeoFVgpVyBUggwmjKJDfolqDOHBInXLAgWopjSrdfWwMeRynrjJeePyQlDjoMvuOhTMcLEDSbVOeqlswPovmuxVedoLWbXWfbCUChCCxJApGssWidMvBFjyTcquJNAxvgoGbhMEutAldhKleDvsEVTuaFLZNoSbrKGDgWrANoSssKnEkTjytUaErDSejRMBIhqcTNgffJWHvZCfUqvwGYGyEOuxBZFqUJgLCjnbNONLpUbOwbHCYOgbNChHQISzBtWxpghClhKfTjgayggrvrVTqCAkWmYWXATQBkSNTvSDDGpyhbwmfYFgIddZojCmiTLRZtjQdTGpmyIbioVIXoAXoWLFrXklVHfcWtkTUvisgPWARQVwDMrAfGgckcdokpkFwsgbPaMZlqKuVmInvbUEKLZVXjNYoowSjafODkRIsyfxfqvgoKJdGmDcScuuMXObyLLfSaBFNovjtaupwaaJirsMSjKnObpTLgrtixxKzYdaNmAxXhHtdIDFeLibesJbYRCiswMIBpTtMiZRbygYYfpSLjgUuJoCYKlIdlLtsOZxFfwUFPkGsQrEdlwOqJwipILeemtzaVWnblVTnAeKoHVwhlmteVysKyYQbRdUoFpDuRwIjqvMtOKTMprhqCVyFbfcqZkGyDhpXUuvowIcpeUXbZWIiKTJuSnIGiBRlfbabdervktHiwzGUNhWTnEKmEhkHtFcbJPtkHxVomnqcaSSdfrIzTHXsrBITHyKrYEBllBqWMmelvGsFWFVgvIODozOaSJsizoqzhEfrIeatxknPqUDcydAmEcDFopcoulnobHLeFkBvAiRYKHftKTylGEJeEQinwsbdOsCipxNxYKaIbkOelABiNDJddQmcEvsHTYmSotmSDqWayRlYduyyzmkXPcyCNuXJIexNMqaaZaXcAgHaUBVmyQrSmvXmgmarfcCSKixipVUwDejnTCYFTyWXRiesLofIyIaDhHkpRbljLviYXaVvNVMWPjiNbOQRKBXymUpFYeCQNbkhQrIdxJjulyMTRtYbjEKotecDBWlrjrgkyYaTcnDmhsiSpdejwAQBzrwDfKhzWIEzbqaVTruEPvkCAuOxvAWaFHMGBcGvqmYoDhFSmplnkjkeYpCwvodIOPvpiITOZdELyTAYRrMPtDKgcbdZKacTgXeIXNpPBYcpteElIOthmOUxhhJNEyZBVAzWxFCnOXcjqfkfyrGrWxCdDemGiQdvxNxYXqeZyyZIwiOhgfXytlgoNHJZTtCxrdwrSZhHrxaMMJwZLkSPAEcomsLzgEnEbAzsKveMxduxzhBoUpxEmnRvJyEPKSzmuJYhiwKcZGZGeljvhPXSMBdwOJIxOUiVaoITULoIdXeQKNMyRxSmCvODNyuMpDqUMGzpiVLCObACyLyHGWYVyoKcAgchxZwLlXLyPQADYXmrHcitmvqvGyJbQcNDyvXRDbSsJMUsdJPAUNrXXZYokrAMQiWJXqitTpqmDqsFsbbJkGezcAUKSMwjdFmvYQmFyYcFOPDGBzjsEredhXKhdjTVPXJiQlLnoyLxQxtflrzIQGFkqVbatflmJakMyyhtsUppWUChVALCVdwiesYuAujoRFuOwCZjSbyChdiwiorZApNExCosssimDWVfCPvdanHYDDevwZNVPMqudkDNKBqtYGQIPFSbzOOfvRNBDVLzIumFwAEWoNRsWGOJXvDGhxLZQuyRZZAyKXLXSewdXRHwuZLefIxGtbjguDudyaDBXjEScxGsDABiLgfmnPoNICPFtrPcPRKIvxizrTWdjrLlGdibQbvoPOBPZGQGJFUAehByBVJlFzHnmwkSRbyAQkXDsacgnqCtZQTYSdZHSeCfXPmOieHRGskjDxbbQIxwEmjGhJIOMyGRiFsNJIijBFFNUnwIvvwWChwRWCDYsNiOlEGqReWABpHkWaYinZsAzdJekFAWFQXJleVUeljWnZNvTTIEPqoOqpeosfMNxDhVvSqruzvWEgnYhBRdAMOEToSdNmGwUZvgmqYyTvgQAYDDiBAQoJPrCXkJxknfSrlNhBprBwNuEqALGdUmfhVYvzSzpMhiTbzbNGLWfpsIZWFtUezJXNRVUKyYsmRiuNthGWMJGcOKdoqNqtLPwZreIhrqAxdtJOATEhBoxWQDTQGctGtimIUujKWhLZAwNMPAerbeTnbWRXkOZmOYBmhNbrVNGggkDYncTxZciEQaXsXvZuOGSNeXdebjwOebnBygcKmnEXlXGpQpjJPXRYszfEuqDbBRsWHHlcrmGofjDMfhSgDacaZTrGCGvHYOyqqwcqGSbMYYCoTCMuzhyCbZMZkIQfaNYIqgRicISOFndfmUQcERaOYHvCOQiqaqhTTUwQGMVFIKIdAGKeGRwpyTREHGzMFDxyKRUsffemyTgxquywxXZolbQfLOyfCKIqSEIyjRmntenQxnXkdQZxscdicslQywbuQyWoEdGGwptijFeYEfaebXxLcDNiIdDyxiBQYVzfbkSuUirDGutZlPNmNdWJMXRcZTJvVaPGAPVmojZGpaTPBOqVrDWclRpmRkTQzOKrPNYVHiAdiLhRWmWrMKvzpJgFyNoPGXlbTQwgKGpsQWTKDYZVMLtCgvphZxBmJbYGVnJDZgQEPPZaoADiXzJOQoNqZQZOjjLfNmQbzNgYZMVNIelCVvPQLeBflbPKAHkMncLKqhlNtazfUFRKGmaJdqeFdviFawOGaylASWGBDavQNCNcnZTsDcMNRvaylUcyhoTcfWzCbh");
  M5::M7::M8* v5 = v3->mutable_f1();
  v5->set_f1(false);
  message->set_f2(0x267aU);
  M5::M6* v7 = message->mutable_f12();
  v7->set_f1(0xb52U);
  message->set_f10(0.302);
  message->set_f13(0x3ed0U);
  message->set_f5(false);
  message->set_f9(0x69971fb78U);
  message->set_f8(0x55646104U);
  message->set_f4(0x1e36U);
  message->set_f6(407);
  message->set_f7(0x1485U);
  message->set_f1(0xad826e1U);
  message->set_f3(0.865);
  return 0;
}

int M9_Create_F1(M9* message, M9* other_message, std::string* serialized) {
  return 0;
}

int M9_Deserialize_F1(M9* message, M9* other_message, std::string* serialized) {
  //other_message->ParseFromString((*serialized));
  AccelParseFromString(hyperprotobench, M9, other_message, serialized);
  return 0;
}

int M9_Destroy_F1(M9* message, M9* other_message, std::string* serialized) {
  return 0;
}

int M9_Get_F1(M9* message, M9* other_message, std::string* serialized) {
  return 0;
}

int M9_Serialize_F1(M9* message, M9* other_message, std::string* serialized) {
  message->SerializeToString(serialized);
  // SERIALIZEHOOK(hyperprotobench, M9, message);
  return 0;
}

int M9_Set_F1(M9* message, M9* other_message, std::string* serialized) {
  message->set_f12(0x38abU);
  message->add_f1(0x331bU);
  message->set_f14(0x1506f8U);
  message->set_f10(true);
  message->set_f6(0x370dU);
  message->set_f11(0.704);
  message->set_f4(0.824);
  message->set_f13(0.703);
  message->set_f7("gjJjDDwJRMpaYwiWDMNqwOdJgubrcbecfYCXsjpNCpXpUWBFHXhUTrVbBHZYHVZkTXTfNeQutIayDNRqUNFSrPuWtlPJwmnpxNRZhUhghpjArNsvOqfKVAvKnkJRvyjqSlmZujHfnwJPGqJQrNyamEyiDMNsizBdioljGfTvlmwZRDgxZvOwRtnlRnLkGMERNLIPMliCnYlOcNiFNutDOMTVYfDfiqskkPzzCkoghSodOwNpgnrqLsZCSSIYxKbBumgUnKzvezqTRVqNsylbpqwMoBbrUfQeXxgsLvoGENOyXbtrjdLKApxPghyJvYVkifDmrEmngNHguOgTJNjjsSATkqdBALOPuFyUMyvAOkkUPaCiWqCeGUAIqjvreOTPVloGxppOMFuWnwnwdPHaFJrTclhxnfSUhJyqmOFLeMlZoxqtGFnwsHhWCCMwkhoLdOopmDxfmfIqJzbdivAdGRRfsFdzRSYzhDwZVLvqhaBLaggVFxAGfIfBxGFPCZLofcuRvtyuGDwFimZgoSIcZsBUinpmwKzxQjpJexjhiGwQbobvFRlzlpnkJlvjiSWnmKnrGuTJaFbRaTOdtiGuIxKacvskQGCcVHeNYXhsQmQymLAwljOmzsIGDSmsAmeWmTJudlYYlgaBXTCWbteBUIbdiLIQoyRSdgHoBcJYAtWeFrNCVgZijhdXMshFFCyuCwpRwWwOYEULgIoNCuEiuyWKsjVrHxjfABQxlqZMtubFUwMNwkhwWjFpjWXxEgesFgEJtYHambTFtgvsadGtRpGkMbulQeYcakTVuUuFFPjJqFbFQKsuWkqONlOwIeLjGfcxcNNIBquyYAqfwHBXtwAPAhElCikUlwSGdZWcSSWoxMBPotEkExyfjFcKSrUuZfzKdDwTjzoPvHuCpulPXDIocMfXQiPIRBBvnzEMiTdcUyPDNeQTfmcqxtIDFSigyrkApeyjnxRrXCzJpBHvnrbOOgrxohOmPhrnYRxHATfnQZcFqMkaZHZHPfCtRoHhrXpwfrmKHCVnhtgfGXnJTdtlAjbwEeLtytqZTrTDMsgQMDlEspwZoRqskxZNWVDNTfvydOBQrkXoWcszBwthEHbIbABgvjlkUEVOYizJGiqGGxcufvppoGsKPVugkqtfmzDWamGOllQxInqVgTwzDOfPyWUgigvmpNaITkedSrTbdalbXEezMlZkZbCAOOcCpnlKVHHWUShTDZbUzsTNpkgMHKvkjZuefMpnojCkCUMiRKoljNBgxgZpDVGMDukGNYoybQxJOWHCOgBTzUpNesMRHcDBRAeKsSHoiIqdCHAogQQZvDoCwjDIvfvyRoWFTkJgiqzblXlxGVoktPvcoLbmXvdaKPbGqMvqFnozVAYbnfsYAexiCfgRgYSJPPlxKjzVrjIgjfqSfawfVgmVuKoMgpmfaVjoRPJGiKaydDIFdmTeWPpAKgAruXPemKohnWwVctacHnvZcGWDulbQJUHFZLtpcLXONavplGvtfrgRgprQlaMizLrVXCUNknKFceOKMPJSdLloeSvXQgrSVhZWlNCMqOVRwHHSAujFymJHZYeNLEIUYwKQoYpuuqggCScvwXXhImbSohqVzVDmlmyNNSEYsgiHvfCubmRbROpRoAztoRNDUIazFkZOCunqNUXVMBnGsrwWaVpIBIQJBBATnGPwtuLZWRRqhCzWVTROdgCcPmPgnDxcUOyjvWPPkaBoITSpDdmPDDmNBCTbmtGmbyzuWsYBoumhQHuRolqHQmbpdRFkzanzsSYjgGnGMZJGESoEYprSebrDCXsCqktmganIVIVIrQqRbbNSDJXWLGdzKMKPngOIwsUBXdAohfNtRqaNoyYGeetitGKkXeBimSFYKwKNnvqhxQbQQagtWgnYxoezPMQxoCzcEGMpKbFCnqfKPaAMeOPlZULhfAQRbovgvuTUHjEwJTpGjtybKKuKlGEbxyEbMHqRzanbtNdfWfsgGVINHQpWLCvpsKdJIhpDfAcnOVAoBFDymVMVttyBupECIbHYlNvOknfypGXWuwqMaVlsDxpSbKDABtiiwVKfiaLeAuIKVxJUaYAwxwpcOQfDJWbwXTPRwbBhrTFBJusZrihbpjuCBnnUVUQIBlSYFuofBrqeSiBPpoNCHIzarBDTPSEHhcCURXmIOOeodMFDtZAWzpEGCWXHxeWMyVaDuTXFVXqEUwDQFeklVcfHhyQTStwPipZeQmZiGdpOgODRYRUECHAxNplClJapEnBumIQPptYsmwqsffSDZVZKAjvRkFqhsPKHICioSPZWowMdaWNKpnnCFJTjnfROhRBevLmXAbDKRWewbJlECLbuKrcVurudZRoqdMnNEoLWzPQToHOwJTFEsnRvbMFdrSpsaNaaCuVpFoIddVkrtcqPEPDnQpBMktpVgDWonBFpkiKOVoNnCjvTqpTzxhZpKyFBLdWjDheRiZBKTVrjwSStSgXufdEhkYMwIxBFUhwVPyahqFupfPlLPAOXhmwkrXoxoPmhqLqQofnLsIUXVnWWZwjKMxEhUHfTrFYQLirpCwYNEpKqeGsujkUdOjBkuFvLTnlxRXqclWgGunnzyHcELidBehQfzyXKSLEGWqKWtetADsynCjVvgeJrikZXPIlNPauxUoHEanSmtLiZeBsmILhKxICnSegAXYGQnSXkKErmXUInEigxtFgLYrFqGrtjMuefJWWTMLxjydduEHiAGzPjDcGWNRWYrPywcsktlIStsXaaHgMkPPWBcWkjnlPRIUbNImrIWCygyJVqroQpZoSsWQTtBvhHiKAXXiFIXCjvvCNrkFnhQiFvaOSXQGjmEeuytPHZyuKoFtxdjXWKrPVceLsNKyqNuHdFzIawTjXLMpuZqgwWVQMCYIakJnlMewuNodFOkydrMafcDQcpnCrwlKfZypmvClfsWAvecgRsLLhwvwnnhIfKqAvPFMoywdwOpPpcndnhLUaNlITetvBNuxHYWjNadrxigitjNSGIpAyztAKLNqzNNZoWvGuqDzynZrVdJUAKsinjEdGYhSKooqhzecdzUwtVNvunXTKlyySOfDUDOGTXhdpVwBZiNKOKKNkFxcLwWXjNPYNMvipiYGkyvLAnjzUOjfwVyaUMPqLPDVRMlRBYAtRUgTTqRhzEIogRlxOUxniWzcuuPRLVzxtHZMnHsREwDrjHeJphKZzmxNqAfUANPeuBsQumrhvHNFrguUogvsmNREmHeAGqiYcERGLhYjURVUPwjrpnRerxwBpmrAATEIcgnwhoawokrcynXtIhoKoVfWWznjxElxoonnrMcfWTBFazFqBytQezGVyrcBvsrRMCHknQdypMoxzaydWZockCdmaXywtFYaZAEKpGCGUDUEJSYGNsWjvHlcBrkRlswRlxfsQCwZCsHshbrbALWtvsHbYfSelUmXQYorcxzUizAQvbhLCLkjTVKFtvURZOnkBsSSiQraIlpfePtDjGkPnabyRBCGFFlXjUCrFazvQyLNHbsmfkiBLYeLGCmKzdLNwbRObbvvVnIoyYIpoyYZJimsRZXYvGczyFDJKBEEOCaImcwvqXOiWImPbnWhOPXYOFTyfYRMgksHIYbHxMGIDIXRiHqnXerCKcxDkVkooYNfIibGCBjpetSWmfdYqJYBcxmrHhHPxhhZAKwynhbpYaYijOEbkDHEQgEjCApBEsPoKMtjortRoWPDUwtmqhKKmfKMunJZTQInNhnxRebsHNLsRsiJXfZzAzexwEubyIPfJvsVNZYXGhOsPBsJaNuTvhWSXbABnMmPdeIgmgTdajcvBtEsyWOadeBlFUHALUjDubIdpqPFFMDFsvpjqTGNjmUWYgUeEPiMQNmOKRAChYGlpskbhkNrcVBkgAAxgHgVlkdtppqHfrZrWWdvltiuNniUYjeUtWKOTkmlsAYbvnjsasXEoxqMlInPNDzKEmYcxRfhFfbxFLPgUXfKxLZrMqPLZcpZRWqfkYSRITjbfRAUeHKyTituEuoEyzHrQiYIcVyFpxsSxQnEScjQxabAJtwvjwtzMZuqxEXCLsLUXjIhVjdQzUkgpqmYnxMnULZlUxDZQNwQfvSevgxhsCOkaAMePutqiwPOMJBVVypbpALUyifKDepZGHgBAwOyobVWQzzokDuxerBivmySkEziVWczbGBvNqwqjsLakmlHkwbwRbzjbCCPSxezOhZYsxhkNBAEzLFkjEWnrrVBzcxAypgwPOPXkPdcOlGAfbKtKiLxwlGuIJfqVddYgzMThKXHuSelAOiUSYuKuWJpJvIqJFgAyxFLkZijINYDBmyYoqdPaQuGzGvKZWCBHVeNngaEpVaBjwyhWdZBxCvQeQNqyaaBkpygQhYXqiMwtCOMuNTGcoMiqxsDtRRoMjdUvPiidebdXBCHZttKDwNvLIURqknuDTPGNNfNxDpoCERpcpYnLwtjzmLXfbqCAegOmtUuDIDSENJuRALfAUJjfCGVztMLIqcqYxuWmrDXzLgnDQycTERxQTcxPhcjzDEtqIXiFUXMQvXxkzgxUzJMFugQCZtGMAOMacPjJkbIwZOyLKXERojyRxoMTMaydKJVdfXFquGYiPnEtFIjEMMRxNfpZBxtsNQLYKmLxjffaafxEgADTndmoSOwwIUuPPoKiGIpJHxMveHlMkxJozDVtTPvqBNnMGbKRNpufxMJSxCKvQgeupHJFlAYrLlVxqpivVzbJZDCapryCgvOgeaoqELLpsFBSIukFGZiGhMrpVBAIxJsvDkNTUZeSKsrxvDSJoaqRuVIqsMKUkUPVqerdobZBbdvLRBvFICrFKwzdUlbwXLazMsVnMqsZPBgCvplsXaexhSofJFVAUWtBsctjiphVVKFRLfOvEnzJdFiMdEespDIRCBDUtZxAzXkrEWuHpNChEtVOoBnZoYSlMaLTpcRuyYTbYJuecZUDGvhvKRbHHOHGpTifahuCmxtehYxuqmInKypMNMzTviYRHQuuovbKKrxLZfySuBijOOsVewHBEavDdxCQVroONZAnkGPhVnrzaSFOeabKCsUiRtDSieagFTIeEsdeSjlqWuBGArYeHbToiKINcVgKzHiUZSmjcNUAQyHvgmXsOSMMwnyigceUHnaVGoRWaDYCLouMxviweGWrlZcbkuvseSZePYZpdlofKWJJulnplmuhnxfOZvbUTHPUtVBuHfFXixkabcBinfMumihKxBNxjQvWOkVPgVZMVnnNWiBoAPxdIUKUrLqlEBzrVnEbDeHIAnhiUhhVsTbtDSiGjrIEvQHMFWsFTmtJVIIcclTOflgElyHLvRTFTqbIVDvIxBDBKhHeCbJVwPxkJQLseiTxGFVhUZwYmFLagshAsPuTMmafNkZwuMhKMOXWIcIwVbQeGXjuXwyzsHDTfHlOKWdskOcNWTsIdApcYfkGTeQyJNMXbzzSrWZzfmDlLMWsLNmOLAocgpgyDsAPfXnOUMbspckvVALNmiSPLtPLcKZbWkOCAJMlZkrPavuLZTXglZwPsPNdpLTUjYJikKADTTQTWArpYViAJbKyyWOXrwWDIMOIyRCafFuuwDLXkcKbCtLlymzfJOwhyykZuLPyfpKjnKVoemOTOfMBQMoCFMxbYyYklWWqLlarZUQHzBqOjpkJujhUXeejZvOwUZzpFJiaKtWwILbmMMyjZAhpnSyIaraBQqfVkafzuiilgHQznooFnreIGsBIbwdKNnBIPvJZtKSIzGLyqIuoinuGKhjCLLpAhrwwbkgTSbwAofgcritLLleAizrzKkxsWvtMhifaylJJaQAtzNEWfAnnjuxgJLpQOBQAwCldclJpDvIURuOgVKKukByMnCgsNKNMsicmHUrvTFjtfahxOUdCSEpTthJjIhRKfcqZQTMRTLKGKcdWmBgbDUkYjHBOYsFdbpoiQarGXOcrAbhfdVNBmJsgrjmGhHyBuWNBVbbetaKXhwKLEfyFizVXElCnsluqOyMXYPECkoQVYjsSRyEqbBdXObmePshJCTIXNyRlHtwILqjtxNIqOSlXQTwbNacOuyljRjkYpoqnVdEgeCvOuiLQIMlrhtHdQWbGTFEHvjIfMKcDQccVnxkgmTDBuHCCCIJewMDOtZkhtjgVMcimKziSBgHbvRhIjJFAnhVeaHDHxISAqYLUHXyYCdGwnnYcWeSCezgImINDJWgTpkMQUaTgvrHgFOgjcmGztkCgFsJawJQcJEqvbIphIosoXVrzCOVkXDCRGGijIUKzzGlRGrMSsCxcTZPUAeDUDGuvKleeKKLllMzTMDzgMGYhmNemITbqeeBVgGLlGNToNITNFRlZWRaobfGEaIdNWJEUVUfpvDMPDSUPTipvhILspaaiyaOQpsSygbhzjTfwrbnMbsthoRjfUeQDROdkteROohYwxADGWAgUKNdJWeCnUPKmFXdGTHiFVaizjBeMYGCkpgghElCfPDcwdnMrSetKkdeCAkxrQzGybaORBdBXYkWKGySZNIUUqnLtPIObcCLacsgeePnhrBfAQYMrUreFcBdabSYWIdgEkRKOeyTPUvmDEWBwGQagWRmBbCSVKnlZiswUThrirxKdHrcBxWjuBPnHdlTlvyMrxkousGfjhWbDXFYaLKmDEAWHvUyXGWaeZANgQnAljylXkaEqoTeRhfBVyWiVDPOwtLLdVwUmuSuXuOmoYcdsqEkkgtXWQlqcbAcaSqrOwsUMgMlXJHwtLwsAekCMvYWfpVFefCVtRCipmoZNHBWbgGPjWEBcTJyZxMuCSdPNltqlLmCaJfLIJDjAGSEIOgcTFanwdjybFxwWMBJULajNdWHGaYhNMaPODpSQGiRABrswAlwalUHdxyiLeDfBJOkserAATLIDnhiIfUtskgxrvEvbYDDionZkHYgSUeFrIJCuIGOsdQLNxCmVdsPvdwDXEdOCOmUAehIjrkXgJPJnsLELcMnasvbekfixmyKsbNJxJWMNFNHnTJzWgJNqfAQiJmUWVWLDGkJDHIgYSfGFqzqIPLDgAfKHZbDWmmSLGZRtPlrLoOdQOeAkuLENTxBXYUbbVRAKwQwrdYWvurTCEBJPuispMLVcZKeBZYptYwBaHCpMjKpSaFlsGZYjJjCiSbQGnVucBFkUSGmsKIsjMIgBJmuDKFFTCRSLvGEzLXZzySTJgQyGcwbeGcRlohaexpKxpYtDCoOwcPHeiVQOoCTcovyrsUVNNnHCeyyBRPjATddPcRKmjhwiaIEjoeZpSCGjCbCDhnfegnHALylNGPwQtojsbtslwEwFmDPfVhmyewrTrEvRTHYnufSJVLEIbZqYWtKMOgiFjTihowtOhgxrxgcQsyfCuIJjgNlNBIazHrIQoeHBYPiDSWwvShDJxTyQdoKxKGPuRkEsSRPWrOOExsuKwWjrDNrnFaMrFPqlsNBhYXMSdrvnagDIKVYwGaDPeICsX");
  message->set_f3("uUTSgMfEJNcpRkRBpZzxsUyZoLBevmRuTRKwNJcdJfapUMotLQXTyyBoipGQfnPcSdBuhtuoYiOFaSocadPHZAIqyeRjxFpejLBUrJJLPrnunNqEPgSsTQoqgHEHpQVUuCkrseCOJgxuXjCybXZXWSwpydNJwATfjBeEnriDXueTlwJnJSUgBVVYNebXapEyVpfDvrenmvtnWMGZvenZnHRhbjcEIQSrkeZnJaMeIpbvXpFBcvgqtskynNKDWCGuBXvZsKVgoqPzNNBvlbYUVLSwPMxVWgYHxEHgpaFzuHOATTgaRZrmnasgYlVsLPBPKirOZZajapCmmPfpdtnexyooeUBjuDIuQCDWTdTdYcFPldhfnwKTccgsycDgfILWOmGdNlHFIozOWNBeLcpXmCoQaLVYRWmhwxlcCBPpgIwUIOJbqUXucLywKGvjIwLjDOeFVFdbpvUmVHddQAtzVDFhZPWGLIoEONwsOTxuipJAhDfwQWPAbXAFdaZaJYinUlvTgbwLxwjSgJUrqWwZSaeWjaJCPFuunsAEsoEBpJpjcZjRmyxfAYAXvNPyyjFiJmoyKxkBrtCIfCOeIiZCYRJRDGLdCcxQbrXEYmYqHwITnbhyljnHIctxuCzrVjcSGKSbwaLtmpqKeKCMlBBvjvjPSZSyzYMyUZhLygKqJettZERScVTThewIJabFBrvKgKDOQhcOLPjJJzLbNnlncWQiaYJqZLOHtsYsVQQOAYaEhuMpwNGVKygqeoyycRQVFIGBITtAHUigFGrwSuZNRgjRTaiEcnFwYtnThzaYODmeOCQCjTobdGepxZMnbzrAhxxMtmMnOZcgzXECfRaSucreSUSDESQvqPIJuJdGRVXMfCLG");
  M9::M12* v16 = message->mutable_f5();
  v16->add_f1(0x223aU);
  v16->add_f1(0xbae13U);
  v16->add_f1(0x1dd05cU);
  v16->add_f1(0x16bdU);
  v16->add_f1(0x23a0U);
  v16->add_f1(0x2df9U);
  v16->add_f1(0x7c5U);
  v16->add_f1(0x450U);
  v16->add_f1(0xffffffffU);
  v16->add_f2(0x1f9df6U);
  v16->set_f5(0.437);
  v16->set_f7(true);
  v16->set_f4(0xeeaU);
  v16->set_f3("fCAtDREatgIbRqtlsYYuCmIUlHlBuzLknxtTkTukKCCxbckwSFhuJteVOVaVaDcDWYAMxPiEJEURsaDXcZPhQBfLcSfctgDAwsRomnBEQbYNclPrEjudbbRQbWxpDAwYpozeMMMUXVzZnjBoxJOGUpQHhlglEaeTsfjBMQafLvEEMagIgwYLnrXulTeElUAtijjNxJkozBFZPoOkoOdhIRBtgelhVLMuLuvUQPVSsolSrxowAKvpeqOFRfILkEXrLfDmvGRiEkylFzsjBrqeRtXMyEDoVHNSjbsRhvPxHSdwXyRuwgsiGOpfXlYuLYavUawzhybVymoRPJwDXDLpVqqFlyjgCPgCmOFGMSRCkPspsmugimudXwRbwBnhXiIqlcljMPfxwyxkWYFkAZMoKPzrpFZoaoMXHfExzcwouMPMopgETRIZbbReWCmwmbtXbGWMPjl");
  v16->set_f6(0xa73U);
  message->set_f8(0x1d0fU);
  M9::M10* v19 = message->mutable_f2();
  v19->set_f2(0xffffffffffffffffU);
  M9::M10::M11* v27 = v19->mutable_f1();
  v27->set_f3(0.76);
  v27->set_f2(0.053);
  v27->set_f4(0x1c43U);
  v27->set_f1(149);
  v27->set_f6(0.297);
  v27->set_f5(0x10f5d6U);
  v27->set_f7(false);
  message->set_f9(0.503);
  return 0;
}

inline int BenchmarkIteration(uint32_t working_set_size, google::protobuf::Arena* arena) {
  std::vector<int> indices(working_set_size);
  for (int i = 0; i < indices.size(); ++i) { indices[i] = i; };
  // Declare local variables for M1 lifecycles;
  std::vector<M1*> m1_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m1_messages[i] = google::protobuf::Arena::CreateMessage<M1>(arena); };
  std::vector<M1*> m1_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m1_other_messages[i] = google::protobuf::Arena::CreateMessage<M1>(arena); };
  std::vector<std::string> m1_strings(working_set_size);
  // Declare local variables for M3 lifecycles;
  std::vector<M3*> m3_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m3_messages[i] = google::protobuf::Arena::CreateMessage<M3>(arena); };
  std::vector<M3*> m3_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m3_other_messages[i] = google::protobuf::Arena::CreateMessage<M3>(arena); };
  std::vector<std::string> m3_strings(working_set_size);
  // Declare local variables for M5 lifecycles;
  std::vector<M5*> m5_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m5_messages[i] = google::protobuf::Arena::CreateMessage<M5>(arena); };
  std::vector<M5*> m5_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m5_other_messages[i] = google::protobuf::Arena::CreateMessage<M5>(arena); };
  std::vector<std::string> m5_strings(working_set_size);
  // Declare local variables for M9 lifecycles;
  std::vector<M9*> m9_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m9_messages[i] = google::protobuf::Arena::CreateMessage<M9>(arena); };
  std::vector<M9*> m9_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m9_other_messages[i] = google::protobuf::Arena::CreateMessage<M9>(arena); };
  std::vector<std::string> m9_strings(working_set_size);
  // Declare local variables for M13 lifecycles;
  std::vector<M13*> m13_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m13_messages[i] = google::protobuf::Arena::CreateMessage<M13>(arena); };
  std::vector<M13*> m13_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m13_other_messages[i] = google::protobuf::Arena::CreateMessage<M13>(arena); };
  std::vector<std::string> m13_strings(working_set_size);
  // Declare local variables for M15 lifecycles;
  std::vector<M15*> m15_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m15_messages[i] = google::protobuf::Arena::CreateMessage<M15>(arena); };
  std::vector<M15*> m15_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m15_other_messages[i] = google::protobuf::Arena::CreateMessage<M15>(arena); };
  std::vector<std::string> m15_strings(working_set_size);
  // Declare local variables for M17 lifecycles;
  std::vector<M17*> m17_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m17_messages[i] = google::protobuf::Arena::CreateMessage<M17>(arena); };
  std::vector<M17*> m17_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m17_other_messages[i] = google::protobuf::Arena::CreateMessage<M17>(arena); };
  std::vector<std::string> m17_strings(working_set_size);
  // Declare local variables for M19 lifecycles;
  std::vector<M19*> m19_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m19_messages[i] = google::protobuf::Arena::CreateMessage<M19>(arena); };
  std::vector<M19*> m19_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m19_other_messages[i] = google::protobuf::Arena::CreateMessage<M19>(arena); };
  std::vector<std::string> m19_strings(working_set_size);
  // Declare local variables for M23 lifecycles;
  std::vector<M23*> m23_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m23_messages[i] = google::protobuf::Arena::CreateMessage<M23>(arena); };
  std::vector<M23*> m23_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m23_other_messages[i] = google::protobuf::Arena::CreateMessage<M23>(arena); };
  std::vector<std::string> m23_strings(working_set_size);
  // Declare local variables for M25 lifecycles;
  std::vector<M25*> m25_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m25_messages[i] = google::protobuf::Arena::CreateMessage<M25>(arena); };
  std::vector<M25*> m25_other_messages(working_set_size);
  for (int i = 0; i < working_set_size; ++i) { m25_other_messages[i] = google::protobuf::Arena::CreateMessage<M25>(arena); };
  std::vector<std::string> m25_strings(working_set_size);
  for (const auto& i : indices) {
    M1_Create_F1(m1_messages[i], m1_other_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Create_F1(m3_messages[i], m3_other_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Create_F1(m5_messages[i], m5_other_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Create_F1(m9_messages[i], m9_other_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Create_F1(m13_messages[i], m13_other_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Create_F1(m15_messages[i], m15_other_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Create_F1(m17_messages[i], m17_other_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Create_F1(m19_messages[i], m19_other_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Create_F1(m23_messages[i], m23_other_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Create_F1(m25_messages[i], m25_other_messages[i], &m25_strings[i]);
  };
  // PRE_SET_HOOK;
  std::cout << "s1\n" << std::flush;
  AccelSetup();
  std::cout << "s2\n" << std::flush;

  for (const auto& i : indices) {
    M1_Set_F1(m1_messages[i], m1_other_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Set_F1(m3_messages[i], m3_other_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Set_F1(m5_messages[i], m5_other_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Set_F1(m9_messages[i], m9_other_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Set_F1(m13_messages[i], m13_other_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Set_F1(m15_messages[i], m15_other_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Set_F1(m17_messages[i], m17_other_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Set_F1(m19_messages[i], m19_other_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Set_F1(m23_messages[i], m23_other_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Set_F1(m25_messages[i], m25_other_messages[i], &m25_strings[i]);
  };
  std::cout << "s3\n" << std::flush;

  auto t1 = std::chrono::steady_clock::now();
  // PRE_SER2_HOOK;

  for (const auto& i : indices) {
    M1_Serialize_F1(m1_messages[i], m1_other_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Serialize_F1(m3_messages[i], m3_other_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Serialize_F1(m5_messages[i], m5_other_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Serialize_F1(m9_messages[i], m9_other_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Serialize_F1(m13_messages[i], m13_other_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Serialize_F1(m15_messages[i], m15_other_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Serialize_F1(m17_messages[i], m17_other_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Serialize_F1(m19_messages[i], m19_other_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Serialize_F1(m23_messages[i], m23_other_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Serialize_F1(m25_messages[i], m25_other_messages[i], &m25_strings[i]);
  };
  // PRE_DES_HOOK;
  auto t2 = std::chrono::steady_clock::now();
  std::cout << "s4\n" << std::flush;

  auto t3 = std::chrono::steady_clock::now();
  asm volatile ("fence");


  for (const auto& i : indices) {
    M1_Deserialize_F1(m1_messages[i], m1_other_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Deserialize_F1(m3_messages[i], m3_other_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Deserialize_F1(m5_messages[i], m5_other_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Deserialize_F1(m9_messages[i], m9_other_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Deserialize_F1(m13_messages[i], m13_other_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Deserialize_F1(m15_messages[i], m15_other_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Deserialize_F1(m17_messages[i], m17_other_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Deserialize_F1(m19_messages[i], m19_other_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Deserialize_F1(m23_messages[i], m23_other_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Deserialize_F1(m25_messages[i], m25_other_messages[i], &m25_strings[i]);
  };
  block_on_completion();

  auto t4 = std::chrono::steady_clock::now();
  auto serduration = std::chrono::duration_cast<std::chrono::microseconds>(t2-t1).count();
  auto desduration = std::chrono::duration_cast<std::chrono::microseconds>(t4-t3).count();
  std::cout << serduration << " us ser\n" << desduration << " us des\n" << std::flush;
  // PRE_GET2_HOOK;

  for (const auto& i : indices) {
    M1_Get_F1(m1_messages[i], m1_other_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Get_F1(m3_messages[i], m3_other_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Get_F1(m5_messages[i], m5_other_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Get_F1(m9_messages[i], m9_other_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Get_F1(m13_messages[i], m13_other_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Get_F1(m15_messages[i], m15_other_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Get_F1(m17_messages[i], m17_other_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Get_F1(m19_messages[i], m19_other_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Get_F1(m23_messages[i], m23_other_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Get_F1(m25_messages[i], m25_other_messages[i], &m25_strings[i]);
  };

  m1_strings[0] = "";
  m3_strings[0] = "";
  m5_strings[0] = "";
  m9_strings[0] = "";
  m13_strings[0] = "";
  m15_strings[0] = "";
  m17_strings[0] = "";
  m19_strings[0] = "";
  m23_strings[0] = "";
  m25_strings[0] = "";

  for (const auto& i : indices) {
    M1_Serialize_F1(m1_other_messages[i], m1_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Serialize_F1(m3_other_messages[i], m3_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Serialize_F1(m5_other_messages[i], m5_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Serialize_F1(m9_other_messages[i], m9_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Serialize_F1(m13_other_messages[i], m13_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Serialize_F1(m15_other_messages[i], m15_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Serialize_F1(m17_other_messages[i], m17_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Serialize_F1(m19_other_messages[i], m19_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Serialize_F1(m23_other_messages[i], m23_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Serialize_F1(m25_other_messages[i], m25_messages[i], &m25_strings[i]);
  };

  const char * serializeoutputs[10];
  size_t lengths[10];

  serializeoutputs[0] = m1_strings[0].c_str();
  serializeoutputs[1] = m3_strings[0].c_str();
  serializeoutputs[2] = m5_strings[0].c_str();
  serializeoutputs[3] = m9_strings[0].c_str();
  serializeoutputs[4] = m13_strings[0].c_str();
  serializeoutputs[5] = m15_strings[0].c_str();
  serializeoutputs[6] = m17_strings[0].c_str();
  serializeoutputs[7] = m19_strings[0].c_str();
  serializeoutputs[8] = m23_strings[0].c_str();
  serializeoutputs[9] = m25_strings[0].c_str();

  lengths[0] = m1_strings[0].length();
  lengths[1] = m3_strings[0].length();
  lengths[2] = m5_strings[0].length();
  lengths[3] = m9_strings[0].length();
  lengths[4] = m13_strings[0].length();
  lengths[5] = m15_strings[0].length();
  lengths[6] = m17_strings[0].length();
  lengths[7] = m19_strings[0].length();
  lengths[8] = m23_strings[0].length();
  lengths[9] = m25_strings[0].length();

  for (int i = 0; i < 10; i++) {
    size_t outlen = lengths[i];
    std::cout << "b, " << outlen << "\n" << std::flush;
  }

  if (do_write) {
#ifdef __riscv
  FILE * outputfile = fopen("/root/outputdata", "w");
#else
  FILE * outputfile = fopen("outputdata", "w");
#endif
  for (int i = 0; i < 10; i++) {
    fprintf(outputfile, "START_OUTPUT\n");
    size_t outlen = lengths[i];
    for (size_t q = 0; q < outlen; q++) {
        uint8_t outval = (uint8_t)(serializeoutputs[i][q]);
        fprintf(outputfile, "%02x\n", outval);
    }
    fprintf(outputfile, "END_OUTPUT\n");
  }
  fclose(outputfile);
  }

  for (const auto& i : indices) {
    M1_Destroy_F1(m1_messages[i], m1_other_messages[i], &m1_strings[i]);
  };
  for (const auto& i : indices) {
    M3_Destroy_F1(m3_messages[i], m3_other_messages[i], &m3_strings[i]);
  };
  for (const auto& i : indices) {
    M5_Destroy_F1(m5_messages[i], m5_other_messages[i], &m5_strings[i]);
  };
  for (const auto& i : indices) {
    M9_Destroy_F1(m9_messages[i], m9_other_messages[i], &m9_strings[i]);
  };
  for (const auto& i : indices) {
    M13_Destroy_F1(m13_messages[i], m13_other_messages[i], &m13_strings[i]);
  };
  for (const auto& i : indices) {
    M15_Destroy_F1(m15_messages[i], m15_other_messages[i], &m15_strings[i]);
  };
  for (const auto& i : indices) {
    M17_Destroy_F1(m17_messages[i], m17_other_messages[i], &m17_strings[i]);
  };
  for (const auto& i : indices) {
    M19_Destroy_F1(m19_messages[i], m19_other_messages[i], &m19_strings[i]);
  };
  for (const auto& i : indices) {
    M23_Destroy_F1(m23_messages[i], m23_other_messages[i], &m23_strings[i]);
  };
  for (const auto& i : indices) {
    M25_Destroy_F1(m25_messages[i], m25_other_messages[i], &m25_strings[i]);
  };
  return 0;
}
